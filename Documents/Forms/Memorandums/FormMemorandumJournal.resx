<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsbLoadFromBoss.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABOdJREFUSEudll1Mk1ccxnu5XZk5YxZxFzqnQlurpVpAMNnNkmWL0RsvRFCpfBsW
        vdCgwFTA0r5lojLG1EznB9OBGIh8o4JC6QdtQVA+JmRYEGFebFyjz55z+qIujMV4kl//fc/7P8/vnPct
        CRoxLvZb264MF+DqUAGuDVtlnaOC178Mvrm+9jacF/XyYP5rKjh36XE+zvUVtsvw0t6cR61BO3x/OuYR
        ID0vFFYbr4uIFd7pEN3TvH4RWueZfoN7SqCg8akNZQFKLj06AT9DXM/tki4V95QdzcGTON9fhObR62gY
        ufqaRiLmzvVZUf+0EE72tz2z4/6kgvuiEtd0Mc49PAbNz/3Hpblj0o5ONoSqXS6q/yMfTaO/YqHROHIN
        9WOFaGd/28RbUNDBrJ96KThPi/M5zcI+t4NJh6RurAA1Q5fVuPmjlvdquIm7EwrujFvRNm5nDXHvmYLy
        HgrKaemgYM5+T8Dm9gkrarn41uAlNW7+qBm8jOqRY2iloJWhLUTWoJU5Dvzgz4WmLJCLB88cr82iQUJR
        9Wg+qh5dVOPmD3Hv5shxNI8raOIPZY5GcoeCsz4KhKWNghbuuoU35mim5OZIPir7Fhbc6LuAyicF/DEU
        oeGpQqzELmkZt6HES8GZ7lxpawoqnCTiuEQ81+rRQlT0nFfj5o8bDy/gt9ETaBp3oCFoQz0RoroxSoIO
        nPLkQHPKk8sd2ygoQsVAPsRLFyieA5KrgTI1bv5weA5Kynqz+ZPMk+uu8I+sTpyEAkfXEWiK3UcYbuOk
        gqrRk8hrPYyBSR9+nxogQ5KFxsjUsOQJewcm/TjadIgZNtSM8RQU2DoosHceQSOfd0OwGHfHz6J8OAOm
        Yr2UvOsQ4UauKR9K57srw+2xYtzme7A+yOYJnHlomihByeN4ZHRvQKbfCEuXCYsOLMKr2Vk1YuHRM+HG
        4oMfI6HThBSvEfs8Rij98TzBKSgdR6HJqk/E/h4Tkt2RSO82UxKN/f4obKs3YtmBT/DyfySBoBMfZS1G
        YucmZHijkMq1ya4o7HVR5jMhsyYRmsjvtcjqMSOdDSkkwxvNxih82xuDrbUbsDRrKWb/QyJOt/xQGHY9
        2CjX7WOwINUdDYvLjFRfNAyKFhpzyXrsZ1gKbwgsborU72m+KHxTY8Rnh1eqsaHx6uUslqQtwdY6I1K4
        GQuDLS6u7Qqx1xXLE8QgUjFAYyo2IN3PXTMwiY3JItwbw1MQNgm5qVSHjdb1ajzwceYSfF0bidTezUhm
        n4X9SW5CyR4hIMlca7RTID7S/GxSbyY4zVhXugLhp8MQXhqGtaeXQf9jmJR8mPSBRF/2qSTizHKsLVkm
        q/7MCsR3mJHIjERnLCwUr7euo6DIII8jwpO4+y+qVmPm7xl1r+8+Zv6awZbK1djNx7OzMwpJ3XEwFOqh
        ERZhS3TyBLy5pfLz9xNwTdz1VUjgRuM7uVk+tnUFPIGBH8KWwGMJ+5aqVe8t2My1u6QgFomeGBhO6KDR
        5URgb2CztAq7QLyD90GEC3byaSQF4qDL4c90Zeaa9q9umbGHkt0+4o/FDq8B210R2OYKZ9WxrlVr+L/Y
        7tKGcEdgh8fAtXzMvjiZ9WX1JqxMWxP6z0J80WZHQPedFvo8HfTHQuhyWY+rVZ2T8+zR5WllFf2ha3WO
        GdpsnRqu0fwDGTSXa+Fo4KEAAAAASUVORK5CYII=
</value>
  </data>
</root>